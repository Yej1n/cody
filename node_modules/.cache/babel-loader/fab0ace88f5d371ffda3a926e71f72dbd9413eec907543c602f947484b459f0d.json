{"ast":null,"code":"import axios from \"axios\";\n\n// GitHub에서 언어 트렌드 가져오기\nexport const fetchGithubTrends = async (language, token) => {\n  const url = `https://api.github.com/search/repositories?q=language:${language}&sort=stars&order=desc`;\n  const headers = {\n    Authorization: `Bearer ${token}`\n  };\n  try {\n    const response = await axios.get(url, {\n      headers\n    });\n    return response.data.items.length;\n  } catch (error) {\n    console.error(`Error fetching GitHub trends for ${language}:`, error);\n    return 0;\n  }\n};\n\n// Stack Overflow에서 언어 태그 데이터 가져오기\nexport const fetchStackOverflowTrends = async tag => {\n  const url = `https://api.stackexchange.com/2.3/tags/${tag}/info?site=stackoverflow`;\n  try {\n    var _response$data$items$;\n    const response = await axios.get(url);\n    return ((_response$data$items$ = response.data.items[0]) === null || _response$data$items$ === void 0 ? void 0 : _response$data$items$.count) || 0;\n  } catch (error) {\n    console.error(`Error fetching Stack Overflow trends for ${tag}:`, error);\n    return 0;\n  }\n};\n\n// Google Trends에서 검색 결과 가져오기\nexport const fetchGoogleTrends = async (apiKey, keyword) => {\n  const cx = \"d64a1a4d11dc2422e\"; // Custom Search Engine ID\n  const url = `https://www.googleapis.com/customsearch/v1?q=${keyword}&cx=${cx}&key=${apiKey}`;\n  try {\n    const response = await axios.get(url);\n    return parseInt(response.data.searchInformation.totalResults) || 0;\n  } catch (error) {\n    console.error(`Error fetching Google trends for ${keyword}:`, error);\n    return 0;\n  }\n};\n\n// 모든 데이터 분석 함수\nexport const analyzeLanguages = async (languages, githubToken, googleApiKey) => {\n  const results = [];\n  for (const lang of languages) {\n    const github = await fetchGithubTrends(lang, githubToken);\n    const stackOverflow = await fetchStackOverflowTrends(lang.toLowerCase());\n    const google = await fetchGoogleTrends(googleApiKey, lang);\n    results.push({\n      language: lang,\n      github,\n      stackOverflow,\n      googleTrend: google,\n      trendScore: github + stackOverflow + google\n    });\n  }\n  return results;\n};","map":{"version":3,"names":["axios","fetchGithubTrends","language","token","url","headers","Authorization","response","get","data","items","length","error","console","fetchStackOverflowTrends","tag","_response$data$items$","count","fetchGoogleTrends","apiKey","keyword","cx","parseInt","searchInformation","totalResults","analyzeLanguages","languages","githubToken","googleApiKey","results","lang","github","stackOverflow","toLowerCase","google","push","googleTrend","trendScore"],"sources":["/Users/yejin/Documents/BSSM/수업/2학년/웹표준화/bigWeb/bigweb/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// GitHub에서 언어 트렌드 가져오기\nexport const fetchGithubTrends = async (language, token) => {\n  const url = `https://api.github.com/search/repositories?q=language:${language}&sort=stars&order=desc`;\n  const headers = { Authorization: `Bearer ${token}` };\n\n  try {\n    const response = await axios.get(url, { headers });\n    return response.data.items.length;\n  } catch (error) {\n    console.error(`Error fetching GitHub trends for ${language}:`, error);\n    return 0;\n  }\n};\n\n// Stack Overflow에서 언어 태그 데이터 가져오기\nexport const fetchStackOverflowTrends = async (tag) => {\n  const url = `https://api.stackexchange.com/2.3/tags/${tag}/info?site=stackoverflow`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data.items[0]?.count || 0;\n  } catch (error) {\n    console.error(`Error fetching Stack Overflow trends for ${tag}:`, error);\n    return 0;\n  }\n};\n\n// Google Trends에서 검색 결과 가져오기\nexport const fetchGoogleTrends = async (apiKey, keyword) => {\n  const cx = \"d64a1a4d11dc2422e\"; // Custom Search Engine ID\n  const url = `https://www.googleapis.com/customsearch/v1?q=${keyword}&cx=${cx}&key=${apiKey}`;\n\n  try {\n    const response = await axios.get(url);\n    return parseInt(response.data.searchInformation.totalResults) || 0;\n  } catch (error) {\n    console.error(`Error fetching Google trends for ${keyword}:`, error);\n    return 0;\n  }\n};\n\n// 모든 데이터 분석 함수\nexport const analyzeLanguages = async (languages, githubToken, googleApiKey) => {\n  const results = [];\n\n  for (const lang of languages) {\n    const github = await fetchGithubTrends(lang, githubToken);\n    const stackOverflow = await fetchStackOverflowTrends(lang.toLowerCase());\n    const google = await fetchGoogleTrends(googleApiKey, lang);\n\n    results.push({\n      language: lang,\n      github,\n      stackOverflow,\n      googleTrend: google,\n      trendScore: github + stackOverflow + google,\n    });\n  }\n\n  return results;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,KAAK;EAC1D,MAAMC,GAAG,GAAG,yDAAyDF,QAAQ,wBAAwB;EACrG,MAAMG,OAAO,GAAG;IAAEC,aAAa,EAAE,UAAUH,KAAK;EAAG,CAAC;EAEpD,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACJ,GAAG,EAAE;MAAEC;IAAQ,CAAC,CAAC;IAClD,OAAOE,QAAQ,CAACE,IAAI,CAACC,KAAK,CAACC,MAAM;EACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoCV,QAAQ,GAAG,EAAEU,KAAK,CAAC;IACrE,OAAO,CAAC;EACV;AACF,CAAC;;AAED;AACA,OAAO,MAAME,wBAAwB,GAAG,MAAOC,GAAG,IAAK;EACrD,MAAMX,GAAG,GAAG,0CAA0CW,GAAG,0BAA0B;EAEnF,IAAI;IAAA,IAAAC,qBAAA;IACF,MAAMT,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACJ,GAAG,CAAC;IACrC,OAAO,EAAAY,qBAAA,GAAAT,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,cAAAM,qBAAA,uBAAtBA,qBAAA,CAAwBC,KAAK,KAAI,CAAC;EAC3C,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4CAA4CG,GAAG,GAAG,EAAEH,KAAK,CAAC;IACxE,OAAO,CAAC;EACV;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,iBAAiB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,OAAO,KAAK;EAC1D,MAAMC,EAAE,GAAG,mBAAmB,CAAC,CAAC;EAChC,MAAMjB,GAAG,GAAG,gDAAgDgB,OAAO,OAAOC,EAAE,QAAQF,MAAM,EAAE;EAE5F,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACJ,GAAG,CAAC;IACrC,OAAOkB,QAAQ,CAACf,QAAQ,CAACE,IAAI,CAACc,iBAAiB,CAACC,YAAY,CAAC,IAAI,CAAC;EACpE,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoCQ,OAAO,GAAG,EAAER,KAAK,CAAC;IACpE,OAAO,CAAC;EACV;AACF,CAAC;;AAED;AACA,OAAO,MAAMa,gBAAgB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,WAAW,EAAEC,YAAY,KAAK;EAC9E,MAAMC,OAAO,GAAG,EAAE;EAElB,KAAK,MAAMC,IAAI,IAAIJ,SAAS,EAAE;IAC5B,MAAMK,MAAM,GAAG,MAAM9B,iBAAiB,CAAC6B,IAAI,EAAEH,WAAW,CAAC;IACzD,MAAMK,aAAa,GAAG,MAAMlB,wBAAwB,CAACgB,IAAI,CAACG,WAAW,CAAC,CAAC,CAAC;IACxE,MAAMC,MAAM,GAAG,MAAMhB,iBAAiB,CAACU,YAAY,EAAEE,IAAI,CAAC;IAE1DD,OAAO,CAACM,IAAI,CAAC;MACXjC,QAAQ,EAAE4B,IAAI;MACdC,MAAM;MACNC,aAAa;MACbI,WAAW,EAAEF,MAAM;MACnBG,UAAU,EAAEN,MAAM,GAAGC,aAAa,GAAGE;IACvC,CAAC,CAAC;EACJ;EAEA,OAAOL,OAAO;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}