{"ast":null,"code":"var _jsxFileName = \"/Users/yejin/Documents/BSSM/\\u1109\\u116E\\u110B\\u1165\\u11B8/2\\u1112\\u1161\\u11A8\\u1102\\u1167\\u11AB/\\u110B\\u1170\\u11B8\\u1111\\u116D\\u110C\\u116E\\u11AB\\u1112\\u116A/bigWeb/bigweb/src/pages/LanguagePrediction.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./LanguagePrediction.css\";\nimport useFetchData from \"../hooks/useFetchData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguagePrediction = () => {\n  _s();\n  const {\n    data,\n    loading,\n    error\n  } = useFetchData();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 순위에 따라 성장률과 증가율을 설정\n  const predefinedData = [{\n    language: \"Python\",\n    growth_rate: 98,\n    increase_rate: \"4.47%\"\n  }, {\n    language: \"JavaScript\",\n    growth_rate: 90,\n    increase_rate: \"3.96%\"\n  }, {\n    language: \"Java\",\n    growth_rate: 80,\n    increase_rate: \"3.62%\"\n  }, {\n    language: \"C#\",\n    growth_rate: 70,\n    increase_rate: \"2.89%\"\n  }, {\n    language: \"C++\",\n    growth_rate: 60,\n    increase_rate: \"2.62%\"\n  }, {\n    language: \"HTML\",\n    growth_rate: 50,\n    increase_rate: \"1.74%\"\n  }, {\n    language: \"CSS\",\n    growth_rate: 40,\n    increase_rate: \"1.39%\"\n  }, {\n    language: \"TypeScript\",\n    growth_rate: 30,\n    increase_rate: \"0.89%\"\n  }, {\n    language: \"PHP\",\n    growth_rate: 20,\n    increase_rate: \"0.39%\"\n  }, {\n    language: \"Ruby\",\n    growth_rate: 10,\n    increase_rate: \"0.15%\"\n  }];\n\n  // 데이터 매핑: API 데이터와 순위 데이터를 병합\n  const processedData = predefinedData.map((predefined, index) => {\n    const apiData = data.find(item => item.language === predefined.language);\n    return {\n      ...predefined,\n      language: predefined.language,\n      growth_rate: predefined.growth_rate,\n      increase_rate: predefined.increase_rate\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prediction-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"prediction-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC21C\\uC704\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC131\\uC7A5\\uB960\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC99D\\uAC00\\uC728\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: processedData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"growth-bar-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"growth-bar\",\n                style: {\n                  width: `${item.growth_rate}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"growth-rate\",\n                children: [item.growth_rate, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.increase_rate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, item.language, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguagePrediction, \"1PXCG/i9CaCTEaRWejVHVnr9GpI=\", false, function () {\n  return [useFetchData];\n});\n_c = LanguagePrediction;\nexport default LanguagePrediction;\n\n// 계산\n// const LanguagePrediction = () => {\n//   const { data, loading, error } = useFetchData();\n\n//   if (loading) {\n//     return <div className=\"loading\">Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div className=\"error\">Error: {error}</div>;\n//   }\n\n//   // 데이터 변환: growth_rate와 increase_rate가 없으면 기본값 지정\n//   const processedData = data.map((item) => ({\n//     ...item,\n//     growth_rate: item.growth_rate || 0,\n//     increase_rate: item.increase_rate || \"N/A\",\n//   }));\n\n//   return (\n//     <div className=\"prediction-container\">\n//       <div className=\"filters\">\n//         <select className=\"filter-dropdown\">\n//           <option value=\"all\">직무 별</option>\n//           <option value=\"frontend\">프론트엔드</option>\n//           <option value=\"backend\">백엔드</option>\n//         </select>\n//         <select className=\"filter-dropdown\">\n//           <option value=\"recent\">기간 별</option>\n//           <option value=\"last_week\">지난 주</option>\n//           <option value=\"last_month\">지난 달</option>\n//         </select>\n//       </div>\n\n//       <table className=\"prediction-table\">\n//         <thead>\n//           <tr>\n//             <th>순위</th>\n//             <th>이름</th>\n//             <th>성장률</th>\n//             <th>증가율</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {processedData.map((item, index) => (\n//             <tr key={item.language}>\n//               <td>{index + 1}</td>\n//               <td>{item.language}</td>\n//               <td>\n//                 <div className=\"growth-bar-container\">\n//                   <div\n//                     className=\"growth-bar\"\n//                     style={{ width: `${item.growth_rate}%` }}\n//                   ></div>\n//                   <span className=\"growth-rate\">{item.growth_rate}%</span>\n//                 </div>\n//               </td>\n//               <td>{item.increase_rate}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default LanguagePrediction;\nvar _c;\n$RefreshReg$(_c, \"LanguagePrediction\");","map":{"version":3,"names":["React","useFetchData","jsxDEV","_jsxDEV","LanguagePrediction","_s","data","loading","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","predefinedData","language","growth_rate","increase_rate","processedData","map","predefined","index","apiData","find","item","style","width","_c","$RefreshReg$"],"sources":["/Users/yejin/Documents/BSSM/수업/2학년/웹표준화/bigWeb/bigweb/src/pages/LanguagePrediction.js"],"sourcesContent":["import React from \"react\";\nimport \"./LanguagePrediction.css\";\nimport useFetchData from \"../hooks/useFetchData\";\n\nconst LanguagePrediction = () => {\n  const { data, loading, error } = useFetchData();\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">Error: {error}</div>;\n  }\n\n  // 순위에 따라 성장률과 증가율을 설정\n  const predefinedData = [\n    { language: \"Python\", growth_rate: 98, increase_rate: \"4.47%\" },\n    { language: \"JavaScript\", growth_rate: 90, increase_rate: \"3.96%\" },\n    { language: \"Java\", growth_rate: 80, increase_rate: \"3.62%\" },\n    { language: \"C#\", growth_rate: 70, increase_rate: \"2.89%\" },\n    { language: \"C++\", growth_rate: 60, increase_rate: \"2.62%\" },\n    { language: \"HTML\", growth_rate: 50, increase_rate: \"1.74%\" },\n    { language: \"CSS\", growth_rate: 40, increase_rate: \"1.39%\" },\n    { language: \"TypeScript\", growth_rate: 30, increase_rate: \"0.89%\" },\n    { language: \"PHP\", growth_rate: 20, increase_rate: \"0.39%\" },\n    { language: \"Ruby\", growth_rate: 10, increase_rate: \"0.15%\" },\n  ];\n\n  // 데이터 매핑: API 데이터와 순위 데이터를 병합\n  const processedData = predefinedData.map((predefined, index) => {\n    const apiData = data.find((item) => item.language === predefined.language);\n    return {\n      ...predefined,\n      language: predefined.language,\n      growth_rate: predefined.growth_rate,\n      increase_rate: predefined.increase_rate,\n    };\n  });\n\n  return (\n    <div className=\"prediction-container\">\n      <table className=\"prediction-table\">\n        <thead>\n          <tr>\n            <th>순위</th>\n            <th>이름</th>\n            <th>성장률</th>\n            <th>증가율</th>\n          </tr>\n        </thead>\n        <tbody>\n          {processedData.map((item, index) => (\n            <tr key={item.language}>\n              <td>{index + 1}</td>\n              <td>{item.language}</td>\n              <td>\n                <div className=\"growth-bar-container\">\n                  <div\n                    className=\"growth-bar\"\n                    style={{ width: `${item.growth_rate}%` }}\n                  ></div>\n                  <span className=\"growth-rate\">{item.growth_rate}%</span>\n                </div>\n              </td>\n              <td>{item.increase_rate}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default LanguagePrediction;\n\n// 계산\n// const LanguagePrediction = () => {\n//   const { data, loading, error } = useFetchData();\n\n//   if (loading) {\n//     return <div className=\"loading\">Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div className=\"error\">Error: {error}</div>;\n//   }\n\n//   // 데이터 변환: growth_rate와 increase_rate가 없으면 기본값 지정\n//   const processedData = data.map((item) => ({\n//     ...item,\n//     growth_rate: item.growth_rate || 0,\n//     increase_rate: item.increase_rate || \"N/A\",\n//   }));\n\n//   return (\n//     <div className=\"prediction-container\">\n//       <div className=\"filters\">\n//         <select className=\"filter-dropdown\">\n//           <option value=\"all\">직무 별</option>\n//           <option value=\"frontend\">프론트엔드</option>\n//           <option value=\"backend\">백엔드</option>\n//         </select>\n//         <select className=\"filter-dropdown\">\n//           <option value=\"recent\">기간 별</option>\n//           <option value=\"last_week\">지난 주</option>\n//           <option value=\"last_month\">지난 달</option>\n//         </select>\n//       </div>\n\n//       <table className=\"prediction-table\">\n//         <thead>\n//           <tr>\n//             <th>순위</th>\n//             <th>이름</th>\n//             <th>성장률</th>\n//             <th>증가율</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {processedData.map((item, index) => (\n//             <tr key={item.language}>\n//               <td>{index + 1}</td>\n//               <td>{item.language}</td>\n//               <td>\n//                 <div className=\"growth-bar-container\">\n//                   <div\n//                     className=\"growth-bar\"\n//                     style={{ width: `${item.growth_rate}%` }}\n//                   ></div>\n//                   <span className=\"growth-rate\">{item.growth_rate}%</span>\n//                 </div>\n//               </td>\n//               <td>{item.increase_rate}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default LanguagePrediction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}