{"ast":null,"code":"var _jsxFileName = \"/Users/yejin/Documents/BSSM/\\u1109\\u116E\\u110B\\u1165\\u11B8/2\\u1112\\u1161\\u11A8\\u1102\\u1167\\u11AB/\\u110B\\u1170\\u11B8\\u1111\\u116D\\u110C\\u116E\\u11AB\\u1112\\u116A/bigWeb/bigweb/src/pages/LanguagePrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguagePrediction = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:5000/analyze\").then(response => setData(response.data)).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Language Growth Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 800,\n      height: 400,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"trend_score\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguagePrediction, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = LanguagePrediction;\nexport default LanguagePrediction;\nvar _c;\n$RefreshReg$(_c, \"LanguagePrediction\");","map":{"version":3,"names":["React","useEffect","useState","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","LanguagePrediction","_s","data","setData","get","then","response","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","type","stroke","activeDot","r","_c","$RefreshReg$"],"sources":["/Users/yejin/Documents/BSSM/수업/2학년/웹표준화/bigWeb/bigweb/src/pages/LanguagePrediction.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\n\nconst LanguagePrediction = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:5000/analyze\")\n      .then(response => setData(response.data))\n      .catch(error => console.error(error));\n  }, []);\n\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">Language Growth Prediction</h1>\n      <LineChart width={800} height={400} data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"language\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"trend_score\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n      </LineChart>\n    </div>\n  );\n};\n\nexport default LanguagePrediction;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzF,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACc,GAAG,CAAC,+BAA+B,CAAC,CACvCC,IAAI,CAACC,QAAQ,IAAIH,OAAO,CAACG,QAAQ,CAACJ,IAAI,CAAC,CAAC,CACxCK,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBZ,OAAA;MAAIW,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvEhB,OAAA,CAACR,SAAS;MAACyB,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAACf,IAAI,EAAEA,IAAK;MAAAS,QAAA,gBAC7CZ,OAAA,CAACJ,aAAa;QAACuB,eAAe,EAAC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvChB,OAAA,CAACN,KAAK;QAAC0B,OAAO,EAAC;MAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5BhB,OAAA,CAACL,KAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACThB,OAAA,CAACH,OAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXhB,OAAA,CAACF,MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVhB,OAAA,CAACP,IAAI;QAAC4B,IAAI,EAAC,UAAU;QAACD,OAAO,EAAC,aAAa;QAACE,MAAM,EAAC,SAAS;QAACC,SAAS,EAAE;UAAEC,CAAC,EAAE;QAAE;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACd,EAAA,CAtBID,kBAAkB;AAAAwB,EAAA,GAAlBxB,kBAAkB;AAwBxB,eAAeA,kBAAkB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}